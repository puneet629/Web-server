#include <stdio.h>
#include <stdlib.h>
#include <sstream>
#include <unistd.h>
#include <iostream>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <signal.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <pthread.h>
#include "sqlite3.h"
#include "FilesRequest.h"
using namespace std;
//File Share Module
void FilesShare(int sd, char* buffer)
{
int i,fd,cmd;
string user,fileID;
char* uri;
static char file_name;

//Using Get to check with User name
uri = strstr(buffer,"usrid");
for(i=6;i<20;i++ )
{
if(uri[i] == '&')
break;
user = user + uri[i];//Parsing of the username
    //printf("username=%s\n",user)
}
//Using Get to check with fileID
uri = strstr(buffer,"test");
for(i=5;i<20;i++ )
	{
    if(uri[i] == '\0')
    break;
    fileID = fileID + uri[i];//Parsing of the fileID
    //printf("fileID=%s\n",fileID)
	}
cout<<user<<endl;
cout<<fileID<<endl;
const char *usr=user.c_str();
const char *fileid=fileID.c_str();
sqlite3 *db;
char *error = 0;
int rec;
string sql;
const char* data = "cb function called";
//opening database
rec = sqlite3_open("207DB.db", &db);
if( rec )
{
fprintf(stderr, "==============Unable to open Database successfully: %s\n==============", sqlite3_errmsg(db));
exit(0);
	}
else
	{
    fprintf(stderr, "==============Request to open Database successful==============\n");
	}
//sqlite3_close(db);
char sqlfile[128] = {0};
cmd=snprintf(sqlfile, 256, "INSERT  into share (fileID,UserID) values ('%s','%s')",fileid,usr);
//printf("Database command%s\n",cmd);
if(cmd<0)
    {
    printf("error\n");}
printf("%s\n",sqlfile);
sqlite3_stmt *count1 = NULL;
int n1=sqlite3_step(count1);
int n2 = sqlite3_prepare(db,sqlfile, 256, &count1, NULL);
//For downloading files
if( n1 <0 )
    {
    fprintf(stderr, "==============SQL error1: %s==============\n", error);
    sqlite3_free(error);
    exit(0);
    }
else
    {
    fprintf(stdout, "==============Request to share file successful==============\n");
    }
rec = sqlite3_close(db);
strcpy(&file_name, "Login.html");
if((fd = open("Login.html",O_RDONLY)) < 0)
    {
    printf("==============Error in opening the requested file==============\n");
    fflush(stdout);
    pthread_exit(NULL);
    }
else
    {
long i, rt, len;
const char * fstr = "text/html";
len = (long)lseek(fd, (off_t)0, SEEK_END);
(void)lseek(fd, (off_t)0, SEEK_SET);
bzero(buffer,sizeof(buffer));
(void)sprintf(buffer,"HTTP/1.1 200 OK\nServer: 207httpd/%d.0\nContent-len: %ld\nConnection: close\nContent-Type: %s\n\n", VERSION,len, fstr);
(void)write(sd,buffer,strlen(buffer));
while ((rt = read(fd, buffer, BUFSIZE)) > 0 ) {
(void)write(sd,buffer,rt);
//printf("%s\n",buffer);
}
sleep(1);
close(sd);
}
}



